
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package io.mateu.common.traductores.caval.in;

import org.easytravelapi.common.*;
import org.easytravelapi.common.Booking;
import travel.caval._20091127.commons.*;

import javax.jws.WebService;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 3.2.0
 * 2017-11-23T11:12:28.429+01:00
 * Generated source version: 3.2.0
 * 
 */

@WebService(
                      serviceName = "CommonsBookingService",
                      portName = "CommonsBookingServicePort",
                      targetNamespace = "http://caval.travel/20091127/commons",
                      wsdlLocation = "caval/CommonsBookingService.wsdl",
                      endpointInterface = "travel.caval._20091127.commons.CommonsBookingService")

public class CommonsBookingServicePortImpl implements CommonsBookingService {

    private static final Logger LOG = Logger.getLogger(travel.caval._20091127.commons.CommonsBookingServicePortImpl.class.getName());

    private static Client client = ClientBuilder.newClient();

    /* (non-Javadoc)
     * @see travel.caval._20091127.commons.CommonsBookingService#getBooking(travel.caval._20091127.commons.GetBooking parameters)*
     */
    public travel.caval._20091127.commons.GetBookingResponse getBooking(GetBooking parameters) {
        LOG.info("Executing operation getBooking");
        System.out.println(parameters);
        try {

            // http://test.easytravelapi.com/rest/yourauthtoken/commons/booking/654541234


            WebTarget t = client.target("http://test.easytravelapi.com/rest/" + parameters.getRq().getAgentId() + "/commons/file/" + parameters.getRq().getLocator());

            GetBookingRS rs = t.request("application/json")
                    .get(GetBookingRS.class);




            travel.caval._20091127.commons.GetBookingResponse _return = new GetBookingResponse();
            CavalGetBookingRS v = new CavalGetBookingRS();
            _return.setReturn(v);
            v.setCpuTime("");
            v.setDateAtServer(rs.getSystemTime());
            v.setMessage(rs.getMsg());
            v.setResultCode(rs.getStatusCode());

            Booking b = rs.getBooking();

            //v.setDescription(b.getServiceDescription());
            v.setFormalizationDate(b.getCreated());
            v.setLocator(b.getBookingId());
            //v.setFromDate(b.getStart());
            //v.setToDate(b.getEnd());
            v.setTitular(b.getLeadName());
            v.setStatus(b.getStatus());
            v.setYourReference("");

            if (b.getNetValue() != null) {
                travel.caval._20091127.commons.Amount p;
                v.setNetPrice(p = new travel.caval._20091127.commons.Amount());
                p.setCurrencyCode(b.getNetValue().getCurrencyIsoCode());
                p.setValue(b.getNetValue().getValue());
            }

            if (b.getRetailValue() != null) {
                travel.caval._20091127.commons.Amount p;
                v.setNetPrice(p = new travel.caval._20091127.commons.Amount());
                p.setCurrencyCode(b.getRetailValue().getCurrencyIsoCode());
                p.setValue(b.getRetailValue().getValue());
            }

            //todo: falta rellenar esto
            /*
            HotelService s;
            v.getHotelServices().add(s = new HotelService());
            s.setBoardCode();
            s.setBoardName();
            s.setCityId();
            s.setCityName();
            s.setCommentForBookingDepartment();
            s.setCommentForHotel();
            s.setCountryCode();
            s.setCountryName();
            s.setEstablishmentId();
            s.setEstablishmentName();
            s.setGrossPrice();
            s.setId();
            s.setNetPrice();
            s.setStateId();
            s.setStateName();
            s.setStatus();
            s.setCityName();
            s.setCityId();
            s.setVoucherText();
            v.getCancellationCosts();
            */



            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see travel.caval._20091127.commons.CommonsBookingService#cancelBooking(travel.caval._20091127.commons.CancelBooking parameters)*
     */
    public travel.caval._20091127.commons.CancelBookingResponse cancelBooking(CancelBooking parameters) {
        LOG.info("Executing operation cancelBooking");
        System.out.println(parameters);
        try {

            // http://test.easytravelapi.com/rest/yourauthtoken/commons/booking/654541234


            WebTarget t = client.target("http://test.easytravelapi.com/rest/" + parameters.getRq().getAgentId() + "/commons/file/" + parameters.getRq().getLocator());

            CancelBookingRS rs = t.request("application/json")
                    .delete(CancelBookingRS.class);


            travel.caval._20091127.commons.CancelBookingResponse _return = new CancelBookingResponse();
            CavalCancelBookingRS v = new CavalCancelBookingRS();
            _return.setReturn(v);
            v.setCpuTime("");
            v.setDateAtServer(rs.getSystemTime());
            v.setMessage(rs.getMsg());
            v.setResultCode(rs.getStatusCode());


            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see travel.caval._20091127.commons.CommonsBookingService#getListOfBookings(travel.caval._20091127.commons.GetListOfBookings parameters)*
     */
    public travel.caval._20091127.commons.GetListOfBookingsResponse getListOfBookings(GetListOfBookings parameters) {
        LOG.info("Executing operation getListOfBookings");
        System.out.println(parameters);
        try {


            // http://test.easytravelapi.com/rest/yourauthtoken/commons/bookings?confirmedfrom=20170919

            WebTarget t = client.target("http://test.easytravelapi.com/rest/" + parameters.getRq().getAgentId() + "/commons/files");

            GetBookingsRS rs = t.request("application/json")
                    .get(GetBookingsRS.class);


            travel.caval._20091127.commons.GetListOfBookingsResponse _return = new GetListOfBookingsResponse();
            CavalGetListOfBookingsRS v = new CavalGetListOfBookingsRS();
            _return.setReturn(v);
            v.setCpuTime("");
            v.setDateAtServer(rs.getSystemTime());
            v.setMessage(rs.getMsg());
            v.setResultCode(rs.getStatusCode());

            for (Booking b : rs.getBookings()) {

                travel.caval._20091127.commons.Booking bx;
                v.getBookings().add(bx = new travel.caval._20091127.commons.Booking());

                bx.setDescription(b.getServiceDescription());
                bx.setFormalizationDate(b.getCreated());
                bx.setLocator(b.getBookingId());
                bx.setFromDate(b.getStart());
                bx.setToDate(b.getEnd());
                bx.setTitular(b.getLeadName());
                bx.setStatus(b.getStatus());
                bx.setYourReference("");

                if (b.getNetValue() != null) {
                    travel.caval._20091127.commons.Amount p;
                    bx.setNetPrice(p = new travel.caval._20091127.commons.Amount());
                    p.setCurrencyCode(b.getNetValue().getCurrencyIsoCode());
                    p.setValue(b.getNetValue().getValue());
                }

                if (b.getRetailValue() != null) {
                    travel.caval._20091127.commons.Amount p;
                    bx.setNetPrice(p = new travel.caval._20091127.commons.Amount());
                    p.setCurrencyCode(b.getRetailValue().getCurrencyIsoCode());
                    p.setValue(b.getRetailValue().getValue());
                }

            }


            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see travel.caval._20091127.commons.CommonsBookingService#getWholeSupportedMap(travel.caval._20091127.commons.GetWholeSupportedMap parameters)*
     */
    public travel.caval._20091127.commons.GetWholeSupportedMapResponse getWholeSupportedMap(GetWholeSupportedMap parameters) {
        LOG.info("Executing operation getWholeSupportedMap");
        System.out.println(parameters);
        try {

            WebTarget t = client.target("http://test.easytravelapi.com/rest/" + parameters.getRq().getAgentId() + "/commons/portfolio");

            GetPortfolioRS rs = t.request("application/json")
                    .get(GetPortfolioRS.class);


            travel.caval._20091127.commons.GetWholeSupportedMapResponse _return = new GetWholeSupportedMapResponse();
            CavalGetWholeSupportedMapRS v = new CavalGetWholeSupportedMapRS();
            _return.setReturn(v);
            v.setCpuTime("");
            v.setDateAtServer(rs.getSystemTime());
            v.setMessage(rs.getMsg());
            v.setResultCode(rs.getStatusCode());
            for (org.easytravelapi.common.Country c : rs.getCountries()) {
                travel.caval._20091127.commons.Country cx;
                v.getCountries().add(cx = new travel.caval._20091127.commons.Country());
                cx.setId(c.getResourceId());
                cx.setName(c.getName());

                for (org.easytravelapi.common.State s : c.getStates()) {
                    travel.caval._20091127.commons.State sx;
                    cx.getStates().add(sx = new travel.caval._20091127.commons.State());
                    sx.setId(s.getResourceId());
                    sx.setName(s.getName());

                    for (org.easytravelapi.common.City l : s.getCities()) {
                        travel.caval._20091127.commons.City lx;
                        sx.getCities().add(lx = new travel.caval._20091127.commons.City());
                        lx.setId(l.getResourceId());
                        lx.setName(l.getName());

                        for (Resource r : l.getResources()) {
                            if ("hotel".equalsIgnoreCase(r.getType())) {

                                Hotel h;
                                lx.getHotels().add(h = new Hotel());
                                h.setId(r.getResourceId());
                                h.setName(r.getName());

                            }
                        }
                    }

                }
            }


            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


}
